<?xml version="1.0" encoding="UTF-8"?>
<web-app
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://xmlns.jcp.org/xml/ns/javaee"
        xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
        http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         id="WebApp_ID" version="3.1">

    <display-name>Spring MVC Framework</display-name>

    <!-- 'spring' DispatcherServlet, the framework will try to load the application context from a file named
    [servlet-name]-servlet.xml located in the application's WebContent/WEB-INF directory.
    In this case our file will be spring-servlet.xml. -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>

    <!-- <servlet-mapping> tag indicates what URLs will be handled by the which DispatcherServlet.
    Here all the HTTP requests will be handled by the HelloWeb DispatcherServlet. -->
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- If you do not want to go with default filename as [servlet-name]-servlet.xml
    and default location as WebContent/WEB-INF, you can customize this file name and
    location by adding the servlet listener ContextLoaderListener in your web.xml file as follows: -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring-servlet.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

</web-app>